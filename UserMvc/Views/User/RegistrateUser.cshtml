@model DAL.Model.User

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>RegistrateUser</title>
</head>
<body class="h-100">


    @Styles.Render("~/Content")
    @Styles.Render("~/Css")


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
      <div class="container h-100">
      <div class="row h-100 justify-content-center align-items-center " >
          <div class="form-horizontal col-lg-3 border align-items-center d-flex flex-column justify-content-center">
              <h4 class="text-center">New user registration: </h4>
              <div class="form-group">
                  @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                  <div class="col-md-10">
                      @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                      @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                  </div>
              </div>
              <div class="form-group">
                  @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                  <div class="col-md-10">
                      @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                      @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                  </div>
              </div>

              <div class="form-group">
                  @Html.LabelFor(model => model.PasswordHash, htmlAttributes: new { @class = "control-label col-md-2" })
                  <div class="col-md-10">

                      @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control", Type = "password" } })
                      @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
                  </div>
              </div>

              <div class="form-group">
                  @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label " })
                  <div class="col-md-10">
                      @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                      @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                  </div>
              </div>

              <div class="form-group">
                  @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                  <div class="col-md-10">
                      @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                      @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                  </div>
              </div>

              <div class="form-group">
                  <div class="mt-3">
                      <input type="submit" value="Register" class="btn btn-primary mt-4" />
                  </div>
                  <div class="mt-3">
                      Already a member?  @Html.ActionLink(" Sign in!", "LogInUser")
                  </div>
                  <div class="mt-3">
                      @Html.ActionLink("Continiue ", controllerName: "Home", actionName: "Index")without registration!
                  </div>
              </div>
          </div>
          </div>
          </div>
    }

    <div>
        

    </div>
    @Scripts.Render("~/Scripts")
</body>

</html>
